services:
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: learnventures-server
    ports:
      - "8000:8000"
    volumes:
      - ./server:/var/www/html
    working_dir: /var/www/html
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: learnventures_db
      DB_USERNAME: learnventures
      DB_PASSWORD: learnpass
    depends_on:
      db:
        condition: service_healthy
    command: php artisan serve --host=0.0.0.0 --port=8000
    restart: unless-stopped

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: learnventures-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app:delegated
      - /app/node_modules
    working_dir: /app
    command: npm start
    stdin_open: true
    tty: true
    environment:
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
      FAST_REFRESH: "false"
      HOST: 0.0.0.0
      PORT: 3000
    restart: unless-stopped

  db:
    image: mysql:8.0.39
    container_name: learnventures-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: learnventures_db
      MYSQL_USER: learnventures
      MYSQL_PASSWORD: learnpass
      MYSQL_ROOT_HOST: "%" # allow root from other containers (dev only)
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test:
        ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -proot || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    # expose only inside the compose network; uncomment if you need host access:
    # ports:
    #   - "3306:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: learnventures-phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      UPLOAD_LIMIT: 64M
      PMA_ARBITRARY: "1"
    depends_on:
      db:
        condition: service_healthy

  n8n:
    image: n8nio/n8n
    container_name: learnventures-n8n
    ports:
      - "5678:5678"
    volumes:
      - ./n8n_data:/home/node/.n8n
    restart: unless-stopped

volumes:
  db_data: {}
