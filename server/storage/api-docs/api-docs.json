{
    "openapi": "3.0.0",
    "info": {
        "title": "LearnVentures API",
        "version": "0.1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8002",
            "description": "Local"
        }
    ],
    "paths": {
        "/api/v0.1/ai-health": {
            "get": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "AI Agent health check",
                "operationId": "d512926403cbd370e6b3a27f7eae8dca",
                "responses": {
                    "200": {
                        "description": "AI agent is healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ai_agent_status": {
                                            "type": "string",
                                            "example": "healthy"
                                        },
                                        "response_status": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "AI agent is unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ai_agent_status": {
                                            "type": "string",
                                            "example": "unavailable"
                                        },
                                        "response_status": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Health check failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ai_agent_status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Connection timeout"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/test-health": {
            "get": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "Test AI Agent health with detailed response",
                "operationId": "382a0cd3effe9baf33fb9fb9162c400a",
                "responses": {
                    "200": {
                        "description": "Health check successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "ai_agent_status": {
                                            "type": "string",
                                            "example": "healthy"
                                        },
                                        "response_status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "api_key_exists": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Health check failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Connection timeout"
                                        },
                                        "api_key_exists": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/user/analyze-performance": {
            "post": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "Analyze user performance based on wrong answers",
                "operationId": "71a92d06592ef40d7d9cac342b154f17",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "lesson_topic",
                                    "wrong_answers"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "lesson_topic": {
                                        "type": "string",
                                        "example": "Basic Arithmetic"
                                    },
                                    "wrong_answers": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "question",
                                                "user_answer",
                                                "correct_answer"
                                            ],
                                            "properties": {
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is 2 + 2?"
                                                },
                                                "user_answer": {
                                                    "type": "string",
                                                    "example": "3"
                                                },
                                                "correct_answer": {
                                                    "type": "string",
                                                    "example": "4"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Performance analysis completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Performance analysis completed"
                                        },
                                        "data": {
                                            "properties": {
                                                "analysis": {
                                                    "type": "string",
                                                    "example": "The student shows difficulty with basic arithmetic..."
                                                },
                                                "lesson_topic": {
                                                    "type": "string",
                                                    "example": "Basic Arithmetic"
                                                },
                                                "questions_analyzed": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Analysis failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Analysis failed: AI service unavailable"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/user/personalize-lesson": {
            "post": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "Generate personalized lesson for user",
                "operationId": "1554f77bb922416bd0d8d470e934bbbb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "lesson_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "lesson_id": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lesson personalized successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson personalized successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "personalized_lesson_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "original_lesson": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Introduction to Algebra"
                                                        },
                                                        "content": {
                                                            "type": "string",
                                                            "example": "Original lesson content..."
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "hobbies": {
                                                            "type": "string",
                                                            "example": "Reading, Gaming"
                                                        },
                                                        "preferences": {
                                                            "type": "string",
                                                            "example": "Visual learning"
                                                        },
                                                        "bio": {
                                                            "type": "string",
                                                            "example": "A passionate learner"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "personalized_lesson": {
                                                    "properties": {
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Algebra for Visual Learners"
                                                        },
                                                        "personalized_content": {
                                                            "type": "string",
                                                            "example": "Customized content based on visual learning preferences..."
                                                        },
                                                        "practical_examples": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Personalization failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson personalization failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "AI service unavailable"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/user/analyses/{userId}": {
            "get": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "Get user's performance analyses",
                "operationId": "615e787fffa54dfffd70e1317d11dae3",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Analyses retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PerformanceAnalysis"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch analyses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to fetch analyses: Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/user/personalized-lessons/{userId}": {
            "get": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "Get user's personalized lessons",
                "operationId": "9bb9b67081e64d0d87235a325d3579b4",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lessons retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PersonalizedLesson"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch lessons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to fetch lessons: Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/user/wrong-answers/{userId}": {
            "get": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "Get user's wrong answers",
                "operationId": "6dfbb9b5386988d887eb399456adab8d",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wrong answers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WrongAnswer"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/quiz/analyze-performance": {
            "post": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "Analyze quiz performance and generate AI feedback",
                "operationId": "ac3e70100054e55ec8247677bc1445c1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "student_quiz_id"
                                ],
                                "properties": {
                                    "student_quiz_id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Quiz performance analysis completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz performance analysis completed"
                                        },
                                        "data": {
                                            "properties": {
                                                "feedback_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "analysis": {
                                                    "properties": {
                                                        "overall_performance": {
                                                            "type": "string",
                                                            "example": "Good performance with room for improvement"
                                                        },
                                                        "weak_areas": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "recommendations": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "study_plan": {
                                                            "type": "string",
                                                            "example": "Focus on multiplication tables..."
                                                        },
                                                        "recommended_lesson_ids": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "integer"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "quiz_title": {
                                                    "type": "string",
                                                    "example": "Mathematics Quiz 1"
                                                },
                                                "score": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 85.5
                                                },
                                                "total_questions": {
                                                    "type": "integer",
                                                    "example": 20
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Quiz must be completed before analysis",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz must be completed before analysis"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz attempt not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz attempt not found or access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Analysis failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz analysis failed: AI service unavailable"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/quiz/feedback/{studentQuizId}": {
            "get": {
                "tags": [
                    "AI Agent"
                ],
                "summary": "Get quiz feedback for a student",
                "operationId": "3ad5fd618fae0fa4730cf8f0ca97cd7c",
                "parameters": [
                    {
                        "name": "studentQuizId",
                        "in": "path",
                        "description": "Student Quiz ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quiz feedback retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PostQuizFeedback"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz feedback not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz feedback not found or access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve feedback",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve quiz feedback: Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/admin/proposals": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get paginated list of change proposals",
                "operationId": "22c278dc3e0742ffaa2a5e42c8a2e625",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter proposals by status (defaults to pending)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "approved",
                                "rejected",
                                "applied",
                                "failed"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of proposals per page",
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Proposals retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProposalSummary"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 42
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied - user is not an admin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The status must be one of: pending, approved, rejected, applied, failed."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/admin/proposals/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get detailed information about a specific proposal",
                "operationId": "54eee34dadb8292ae2eb37f33e35f03e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Proposal ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Proposal details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProposalDetail"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied - user is not an admin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Proposal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/admin/proposals/{id}/decision": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Approve or reject a change proposal",
                "operationId": "2e0abf09c839fb1295a59f6e2fff5013",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Proposal ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DecisionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Decision applied successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "approved",
                                                "rejected",
                                                "applied",
                                                "failed"
                                            ],
                                            "example": "applied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - proposal already decided or drift detected",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Proposal has already been decided"
                                        },
                                        "current_status": {
                                            "type": "string",
                                            "example": "approved"
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "drift_detected"
                                            ],
                                            "example": "drift_detected"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied - user is not an admin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Proposal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Action must be either approve or reject"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to apply changes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to apply proposal changes"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database transaction failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/guest/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "3df68d9095a57bb30a74997ef4f1688a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 1,
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "payload": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        },
                                        "payload": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Login failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login failed: Internal server error"
                                        },
                                        "payload": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v0.1/guest/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "operationId": "0b1d1f97c0ab1797b0c4557358a0095e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "hobbies": {
                                        "type": "string",
                                        "example": "Reading, Gaming",
                                        "nullable": true
                                    },
                                    "preferences": {
                                        "type": "string",
                                        "example": "Visual learning",
                                        "nullable": true
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "A passionate learner",
                                        "nullable": true
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "Student",
                                            "Instructor",
                                            "Moderator",
                                            "Admin"
                                        ],
                                        "example": "Student",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful"
                                        },
                                        "payload": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Registration failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration failed: Email already exists"
                                        },
                                        "payload": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration failed: Internal server error"
                                        },
                                        "payload": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v0.1/chat/sessions": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Create a new chat session",
                "operationId": "f9b41e0bd3892272a4adf4a1d931fa08",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "grade_id"
                                ],
                                "properties": {
                                    "grade_id": {
                                        "description": "Grade ID for which the chat session is created",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Chat session created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Chat session created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "session_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "grade_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied - user not enrolled in grade",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are not enrolled in this grade or your enrollment is not accepted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The grade_id field is required."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/chat/messages": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Send a message and get AI response",
                "operationId": "400595f1773f90e920fe28de7b7cd64e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "session_id",
                                    "message"
                                ],
                                "properties": {
                                    "session_id": {
                                        "description": "Chat session ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "message": {
                                        "description": "User's message/question",
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "What is photosynthesis?"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message processed successfully or out of scope response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "data": {
                                                    "$ref": "#/components/schemas/ChatResponse"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "data": {
                                                    "properties": {
                                                        "message_id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "response": {
                                                            "type": "string",
                                                            "example": "Out of scope for this grade."
                                                        },
                                                        "context_chunks_used": {
                                                            "type": "integer",
                                                            "example": 0
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Chat session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Chat session not found or access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The message field is required."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/mod/excel/baseline": {
            "get": {
                "tags": [
                    "Moderator"
                ],
                "summary": "Get baseline data for Excel moderation",
                "operationId": "c00ef1599bc1bbe1b330ef56668b1379",
                "parameters": [
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Scope definition for baseline data",
                        "required": true,
                        "schema": {
                            "properties": {
                                "grade_id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "tables": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "users",
                                            "subjects",
                                            "chapters",
                                            "lessons"
                                        ]
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Baseline data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaselineData"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to generate baseline",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to generate baseline"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database connection error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied - user is not a moderator",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The scope.grade_id field is required."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v0.1/mod/proposals": {
            "post": {
                "tags": [
                    "Moderator"
                ],
                "summary": "Create a new change proposal",
                "operationId": "af8f2489061ae1e5ee783e548c250841",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProposalCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Proposal created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "pending"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicate proposal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Proposal with this Excel hash already exists"
                                        },
                                        "existing_id": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied - user is not a moderator",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Excel hash must be a valid SHA256 hex string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create proposal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create proposal"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "WrongAnswer": {
                "properties": {
                    "question": {
                        "type": "string",
                        "example": "What is 2 + 2?"
                    },
                    "user_answer": {
                        "type": "string",
                        "example": "3"
                    },
                    "correct_answer": {
                        "type": "string",
                        "example": "4"
                    },
                    "lesson_topic": {
                        "type": "string",
                        "example": "Basic Arithmetic"
                    }
                },
                "type": "object"
            },
            "PerformanceAnalysis": {
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "lesson_topic": {
                        "type": "string",
                        "example": "Basic Arithmetic"
                    },
                    "analysis": {
                        "type": "string",
                        "example": "The student shows difficulty with basic addition..."
                    },
                    "analyzed_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PersonalizedLesson": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "lesson_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "personalized_title": {
                        "type": "string",
                        "example": "Basic Arithmetic (Personalized)"
                    },
                    "personalized_content": {
                        "type": "string",
                        "example": "Customized lesson content..."
                    },
                    "practical_examples": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "generated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PostQuizFeedback": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "student_quiz_id": {
                        "type": "integer",
                        "example": 10
                    },
                    "lesson_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "overall_performance": {
                        "type": "string",
                        "example": "Good performance with room for improvement"
                    },
                    "weak_areas": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "recommendations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "study_plan": {
                        "type": "string",
                        "example": "Focus on multiplication tables..."
                    },
                    "recommended_lesson_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "analyzed_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProposalSummary": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "moderator": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "name": {
                                "type": "string",
                                "example": "John Moderator"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "approved",
                            "rejected",
                            "applied",
                            "failed"
                        ],
                        "example": "pending"
                    },
                    "summary": {
                        "properties": {
                            "subjects": {
                                "properties": {
                                    "create": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "update": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "delete": {
                                        "type": "integer",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            },
                            "chapters": {
                                "properties": {
                                    "create": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "update": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "delete": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            },
                            "lessons": {
                                "properties": {
                                    "create": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "update": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "delete": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ProposalDetail": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "moderator": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "name": {
                                "type": "string",
                                "example": "John Moderator"
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "john@moderator.com"
                            }
                        },
                        "type": "object"
                    },
                    "scope": {
                        "properties": {
                            "grade_id": {
                                "type": "integer",
                                "example": 3
                            },
                            "tables": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "excel_snapshot": {
                        "type": "object"
                    },
                    "db_snapshot": {
                        "type": "object"
                    },
                    "diff_json": {
                        "type": "object"
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "excel_path": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "decided_by": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Admin User"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "DecisionRequest": {
                "required": [
                    "action"
                ],
                "properties": {
                    "action": {
                        "type": "string",
                        "enum": [
                            "approve",
                            "reject"
                        ],
                        "example": "approve"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "Student",
                            "Instructor",
                            "Moderator",
                            "Admin"
                        ],
                        "example": "Student"
                    },
                    "hobbies": {
                        "type": "string",
                        "example": "Reading, Gaming",
                        "nullable": true
                    },
                    "preferences": {
                        "type": "string",
                        "example": "Visual learning",
                        "nullable": true
                    },
                    "bio": {
                        "type": "string",
                        "example": "A passionate learner",
                        "nullable": true
                    },
                    "token": {
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                    }
                },
                "type": "object"
            },
            "ApiResponse": {
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    },
                    "payload": {
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ChatSession": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "grade_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ended_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ChatMessage": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "session_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "user",
                            "assistant"
                        ],
                        "example": "user"
                    },
                    "content": {
                        "type": "string",
                        "example": "What is photosynthesis?"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ChatResponse": {
                "properties": {
                    "message_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "response": {
                        "type": "string",
                        "example": "Photosynthesis is the process by which plants convert light energy into chemical energy..."
                    },
                    "context_chunks_used": {
                        "type": "integer",
                        "example": 3
                    },
                    "grade_scope": {
                        "type": "string",
                        "example": "Grade 10 Science"
                    }
                },
                "type": "object"
            },
            "ChangeProposal": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "moderator_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "scope": {
                        "properties": {
                            "grade_id": {
                                "type": "integer",
                                "example": 3
                            },
                            "tables": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "users",
                                        "subjects",
                                        "chapters",
                                        "lessons"
                                    ]
                                }
                            }
                        },
                        "type": "object"
                    },
                    "excel_hash": {
                        "type": "string",
                        "example": "a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890"
                    },
                    "excel_path": {
                        "type": "string",
                        "example": "/storage/uploads/proposal_123.xlsx",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "approved",
                            "rejected"
                        ],
                        "example": "pending"
                    },
                    "admin_decision": {
                        "type": "string",
                        "nullable": true
                    },
                    "decided_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "BaselineData": {
                "properties": {
                    "scope": {
                        "properties": {
                            "grade_id": {
                                "type": "integer",
                                "example": 3
                            },
                            "tables": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "data": {
                        "properties": {
                            "users": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "subjects": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "chapters": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "lessons": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ProposalCreateRequest": {
                "required": [
                    "scope",
                    "excel_hash",
                    "excel_snapshot",
                    "db_snapshot",
                    "diff_json"
                ],
                "properties": {
                    "scope": {
                        "properties": {
                            "grade_id": {
                                "type": "integer",
                                "example": 3
                            },
                            "tables": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "users",
                                        "subjects",
                                        "chapters",
                                        "lessons"
                                    ]
                                }
                            }
                        },
                        "type": "object"
                    },
                    "excel_hash": {
                        "type": "string",
                        "example": "a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890"
                    },
                    "excel_path": {
                        "type": "string",
                        "example": "/storage/uploads/proposal_123.xlsx",
                        "nullable": true
                    },
                    "excel_snapshot": {
                        "properties": {
                            "subjects": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "chapters": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "lessons": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "db_snapshot": {
                        "properties": {
                            "subjects": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "chapters": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "lessons": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "diff_json": {
                        "properties": {
                            "subjects": {
                                "properties": {
                                    "create": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "update": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "delete": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "chapters": {
                                "properties": {
                                    "create": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "update": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "delete": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "lessons": {
                                "properties": {
                                    "create": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "update": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "delete": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "AI Agent",
            "description": "AI Agent"
        },
        {
            "name": "Admin",
            "description": "Admin"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Chat",
            "description": "Chat"
        },
        {
            "name": "Moderator",
            "description": "Moderator"
        }
    ]
}